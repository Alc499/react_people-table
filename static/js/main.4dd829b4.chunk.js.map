{"version":3,"sources":["api/getData.js","components/getClassForPersonsName.js","components/getClassForPersonsInfo.js","components/PersonInfo.js","components/PeopleTable.js","components/createSorterBy.js","components/NewPerson.js","App.js","index.js"],"names":["getPeople","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getData","_ref2","_callee2","people","_context2","sent","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","p","getClassForPersonsName","result","getClassForPersonsInfo","concat","sex","length","PersonInfo","state","selectedPersonId","_this2","props","react_default","createElement","key","className","classnames","person--selected","onClick","setState","join","React","Component","PeopleTable","components_PersonInfo","sortedPeople","currentKey","createSorterBy","sortField","reverse","toConsumableArray","sort","b","localeCompare","NewPerson","errorsMap","handleFormSubmit","event","_this$props","_this","onSubmit","peopleAmmount","preventDefault","prevState","keys","handleFieldChange","_event$target","target","value","checked","type","defineProperty","replace","split","_this$setState2","htmlFor","placeholder","onChange","min","Date","getFullYear","App","visiblePeople","isVisible","loadData","sortBy","handleFilter","toLowerCase","includes","trim","toggleForm","addNewPerson","_this$state","Fragment","components_NewPerson","components_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.4dd829b4.chunk.js","sourcesContent":["const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = async() => fetch(url)\n  .then(response => response.json());\nconst getData = async() => {\n  const people = await getPeople();\n\n  return people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => child.father === person.name\n        || child.mother === person.name)\n      .map(p => p.name),\n  }));\n};\n\nexport default getData;\n","const getClassForPersonsName = (person) => {\n  let result = '';\n\n  if (person.born < 1650) {\n    result += `person__born-before-1650`;\n  }\n\n  if (person.died > 1800) {\n    result += `person__died-after-1800`;\n  }\n\n  return result;\n};\n\nexport default getClassForPersonsName;\n","const getClassForPersonsInfo = (person) => {\n  let result = `person person__lived-in-${person.century}`;\n\n  if (person.sex === 'f') {\n    result += ` person__female`;\n  }\n\n  if (person.sex === 'm') {\n    result += ` person__male`;\n  }\n\n  if (person.age > 65) {\n    result += ` person__lived-at-least-65`;\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    result += ` person__father`;\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    result += ` person__mother`;\n  }\n\n  return result;\n};\n\nexport default getClassForPersonsInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport getClassForPersonsName from './getClassForPersonsName';\nimport getClassForPersonsInfo from './getClassForPersonsInfo';\n\nclass PersonInfo extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      people.map(person => (\n        <tr\n          key={person.id}\n          className={classnames(getClassForPersonsInfo(person), {\n            'person--selected': person.id === selectedPersonId,\n          })}\n          onClick={() => this.setState({ selectedPersonId: person.id })}\n        >\n          <td>{person.id}</td>\n\n          <td\n            className={getClassForPersonsName(person)}\n          >\n            {person.name}\n          </td>\n\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>{person.age}</td>\n          <td>\n            {person.mother === null || person.mother === ''\n              ? 'unknown'\n              : person.mother\n            }\n          </td>\n          <td>\n            {person.father === null || person.father === ''\n              ? 'unknown'\n              : person.father\n            }\n          </td>\n          <td>\n            {person.children.length > 0\n              ? person.children.join(', ')\n              : 'unknown'\n            }\n          </td>\n        </tr>\n      )));\n  }\n}\n\nPersonInfo.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.array,\n  }).isRequired,\n};\n\nexport default PersonInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PersonInfo from './PersonInfo';\n\nconst PeopleTable = ({ people }) => (\n  <table className=\"people-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Age</th>\n        <th>Mother</th>\n        <th>Father</th>\n        <th>Children</th>\n      </tr>\n    </thead>\n    <tbody>\n      <PersonInfo people={people} />\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","let sortedPeople = [];\nlet currentKey = '';\n\nconst createSorterBy = ({ sortField, people }) => {\n  if (currentKey === sortField) {\n    return sortedPeople.reverse();\n  }\n\n  currentKey = sortField;\n\n  sortedPeople = [...people].sort((a, b) => {\n    switch (typeof a[sortField]) {\n      case 'string':\n        return a[sortField].localeCompare(b[sortField]);\n\n      case 'number':\n      case 'boolean':\n        return a[sortField] - b[sortField];\n\n      default:\n        return 0;\n    }\n  });\n\n  return sortedPeople;\n};\n\nexport default createSorterBy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state ={\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n    children: [],\n\n    errorsMap: {\n      name: '',\n      born: '',\n      age: '',\n      sex: '',\n    },\n  };\n\n  handleFormSubmit = (event) => {\n    const { onSubmit, peopleAmmount } = this.props;\n\n    const errorsMap = {};\n\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      const {\n        died,\n        born,\n        name,\n        sex,\n        children,\n        mother,\n        father,\n      } = prevState;\n\n      const age = (died === ''\n        ? 2019 - +born\n        : +died - +born);\n\n      if (!name) {\n        errorsMap.name = 'Name is required';\n      }\n\n      if (!born) {\n        errorsMap.born = 'Year of birth is required';\n      }\n\n      if (!sex) {\n        errorsMap.sex = 'Please, choose your gender';\n      }\n\n      if (age < 0 || age > 150) {\n        errorsMap.age = 'Invalid year of birth and/or year of death';\n      }\n\n      if (Object.keys(errorsMap).length > 0) {\n        return { errorsMap };\n      }\n\n      onSubmit({\n        id: peopleAmmount + 1,\n        age: (died === ''\n          ? 2019 - +born\n          : +died - +born),\n        name,\n        sex,\n        born: +born,\n        died: (died === ''\n          ? ''\n          : +died),\n        children,\n        mother,\n        father,\n      });\n\n      return {};\n    });\n\n    this.setState({\n      name: '',\n      sex: '',\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n      children: [],\n    });\n  };\n\n  handleFieldChange = (event) => {\n    const {\n      name, value, checked, type,\n    } = event.target;\n\n    if (type === 'checkbox') {\n      this.setState({\n        [name]: checked,\n      });\n    } else if (name === 'children') {\n      this.setState({\n        children: value.replace(/[^\\w, ]/, '').split(', '),\n      });\n    } else {\n      this.setState({\n        [name]: value.replace(/[^\\w ]/, ''),\n\n        errorsMap: {\n          name: '',\n          born: '',\n        },\n      });\n    }\n  };\n\n  render() {\n    const { errorsMap } = this.state;\n\n    return (\n      <form\n        className=\"add-person-form\"\n        onSubmit={this.handleFormSubmit}\n      >\n        <div>\n          <label htmlFor=\"name-field\">\n            Person's name:\n\n            <input\n              className=\"add-person-form__field\"\n              id=\"name-field\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"FirstName LastName\"\n              onChange={this.handleFieldChange}\n            />\n          </label>\n\n          {errorsMap.name && (\n            <div className=\"add-person-form__error\">\n              {errorsMap.name}\n            </div>\n          )}\n        </div>\n\n        <div className=\"add-person-form__sex-fields\">\n          <label htmlFor=\"male-sex\">\n            <input\n              className=\"add-person-form__field add-person-form__sex-field\"\n              id=\"male-sex\"\n              type=\"radio\"\n              name=\"sex\"\n              value=\"m\"\n              onChange={this.handleFieldChange}\n            />\n            Male\n          </label>\n\n          <label htmlFor=\"female-sex\">\n            <input\n              className=\"add-person-form__field add-person-form__sex-field\"\n              id=\"female-sex\"\n              type=\"radio\"\n              name=\"sex\"\n              value=\"f\"\n              onChange={this.handleFieldChange}\n            />\n            Female\n          </label>\n\n          {errorsMap.sex && (\n            <div className=\"add-person-form__error\">\n              {errorsMap.sex}\n            </div>\n          )}\n        </div>\n\n        <div className=\"add-person-form__years-fields\">\n          <div>\n            <label htmlFor=\"born-field\">\n              Year of birth:\n\n              <input\n                className=\"add-person-form__field add-person-form__years-field\"\n                id=\"born-field\"\n                type=\"number\"\n                name=\"born\"\n                min=\"0\"\n                placeholder={new Date().getFullYear()}\n                onChange={this.handleFieldChange}\n              />\n            </label>\n\n            {errorsMap.born && (\n              <div className=\"add-person-form__error\">\n                {errorsMap.born}\n              </div>\n            )}\n          </div>\n\n          <label htmlFor=\"dead-field\">\n            Year of death:\n\n            <input\n              className=\"add-person-form__field add-person-form__years-field\"\n              id=\"dead-field\"\n              type=\"number\"\n              name=\"died\"\n              min=\"0\"\n              placeholder={new Date().getFullYear()}\n              onChange={this.handleFieldChange}\n            />\n          </label>\n        </div>\n\n        {errorsMap.age && (\n          <div className=\"add-person-form__error\">\n            {errorsMap.age}\n          </div>\n        )}\n\n        <div>\n          <label htmlFor=\"mother-field\">\n            Person mother's name:\n\n            <input\n              className=\"add-person-form__field\"\n              id=\"mother-field\"\n              type=\"text\"\n              name=\"mother\"\n              placeholder=\"FirstName LastName\"\n              onChange={this.handleFieldChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label htmlFor=\"father-field\">\n            Person father's name:\n\n            <input\n              className=\"add-person-form__field\"\n              id=\"father-field\"\n              type=\"text\"\n              name=\"father\"\n              placeholder=\"FirstName LastName\"\n              onChange={this.handleFieldChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label htmlFor=\"children-field\">\n            Person children's names:\n\n            <input\n              className=\"add-person-form__field\"\n              id=\"children-field\"\n              type=\"text\"\n              name=\"children\"\n              placeholder=\"Please, separate names by comma\"\n              onChange={this.handleFieldChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <button\n            type=\"submit\"\n            className=\"add-person-form__btn\"\n          >\n            Add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  peopleAmmount: PropTypes.number.isRequired,\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PeopleTable from './components/PeopleTable';\nimport createSorterBy from './components/createSorterBy';\nimport NewPerson from './components/NewPerson';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    sortField: 'id',\n    isVisible: false,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const people = await getData();\n\n    this.setState({\n      people,\n      visiblePeople: people,\n    });\n  };\n\n  sortBy = (sortField) => {\n    this.setState({\n      sortField,\n    });\n    this.setState(prevState => ({\n      visiblePeople: createSorterBy(prevState),\n    }));\n  };\n\n  handleFilter = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        person => ((\n          person.name\n            .toLowerCase()\n            .includes(value\n              .toLowerCase()\n              .trim())\n        ) || (\n          person.mother === null || person.mother === ''\n            ? 0\n            : person.mother\n              .toLowerCase()\n              .includes(value\n                .toLowerCase()\n                .trim())\n        ) || (\n          person.father === null || person.father === ''\n            ? 0\n            : person.father\n              .toLowerCase()\n              .includes(value\n                .toLowerCase()\n                .trim())\n        ))\n      ),\n    }));\n  }\n\n  toggleForm = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible,\n    }));\n  }\n\n  addNewPerson = (person) => {\n    this.setState((prevState) => {\n      const people = [...prevState.people, person];\n\n      return {\n        people,\n        visiblePeople: people,\n      };\n    });\n  }\n\n  render() {\n    const { visiblePeople, isVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>People table</h1>\n\n        <div className=\"sort-buttons\">\n          <h2>\n            Sort by:\n          </h2>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('id')}\n            className=\"sort-buttons__btn\"\n          >\n            ID\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('name')}\n            className=\"sort-buttons__btn\"\n          >\n            Name\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('age')}\n            className=\"sort-buttons__btn\"\n          >\n            Age\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('born')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of birth\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('died')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of death\n          </button>\n        </div>\n\n        <div className=\"filter-input\">\n          <label htmlFor=\"name-input\">\n            Filter:\n            <input\n              className=\"filter-input__input\"\n              type=\"text\"\n              id=\"name-input\"\n              onChange={this.handleFilter}\n            />\n          </label>\n        </div>\n\n        { isVisible ? (\n          <>\n            <NewPerson\n              peopleAmmount={visiblePeople.length}\n              onSubmit={this.addNewPerson}\n            />\n\n            <div className=\"toggle-btn\">\n              <button\n                type=\"button\"\n                onClick={this.toggleForm}\n                className=\"toggle-btn\"\n              >\n                Hide form\n              </button>\n            </div>\n\n          </>\n        ) : (\n          <div className=\"toggle-btn\">\n            <button\n              type=\"button\"\n              onClick={this.toggleForm}\n              className=\"toggle-btn\"\n            >\n              Add new person\n            </button>\n          </div>\n        )\n        }\n\n        <PeopleTable people={visiblePeople} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}