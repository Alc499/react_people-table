{"version":3,"sources":["api/getData.js","components/getClassForPersonsName.js","components/getClassForPersonsInfo.js","components/PersonInfo.js","components/PeopleTable.js","components/createSorterBy.js","components/NewPerson.js","App.js","index.js"],"names":["getPeople","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getData","_ref2","_callee2","people","_context2","sent","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","p","getClassForPersonsName","result","getClassForPersonsInfo","concat","sex","length","PersonInfo","state","selectedPersonId","_this2","props","react_default","createElement","key","className","classnames","person--selected","onClick","setState","undefined","join","React","Component","PeopleTable","components_PersonInfo","sortedPeople","currentKey","createSorterBy","sortField","reverse","toConsumableArray","sort","b","localeCompare","NewPerson","handleSubmit","event","preventDefault","form","target","_this","onSubmit","peopleAmmount","elements","value","type","placeholder","required","htmlFor","getAge","App","visiblePeople","loadData","sortBy","prevState","handleFilter","_event$target","toLowerCase","includes","trim","addNewPerson","console","log","onChange","components_NewPerson","components_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.95a4deb6.chunk.js","sourcesContent":["const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = async() => fetch(url)\n  .then(response => response.json());\nconst getData = async() => {\n  const people = await getPeople();\n\n  return people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => child.father === person.name\n        || child.mother === person.name)\n      .map(p => p.name),\n  }));\n};\n\nexport default getData;\n","const getClassForPersonsName = (person) => {\n  let result = '';\n\n  if (person.born < 1650) {\n    result += `person__born-before-1650`;\n  }\n\n  if (person.died > 1800) {\n    result += `person__died-after-1800`;\n  }\n\n  return result;\n};\n\nexport default getClassForPersonsName;\n","const getClassForPersonsInfo = (person) => {\n  let result = `person person__lived-in-${person.century}`;\n\n  if (person.sex === 'f') {\n    result += ` person__female`;\n  }\n\n  if (person.sex === 'm') {\n    result += ` person__male`;\n  }\n\n  if (person.age > 65) {\n    result += ` person__lived-at-least-65`;\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    result += ` person__father`;\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    result += ` person__mother`;\n  }\n\n  return result;\n};\n\nexport default getClassForPersonsInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport getClassForPersonsName from './getClassForPersonsName';\nimport getClassForPersonsInfo from './getClassForPersonsInfo';\n\nclass PersonInfo extends React.Component {\n  state = {\n    selectedPersonId: null,\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPersonId } = this.state;\n\n    return (\n      people.map(person => (\n        <tr\n          key={person.id}\n          className={classnames(getClassForPersonsInfo(person), {\n            'person--selected': person.id === selectedPersonId,\n          })}\n          onClick={() => this.setState({ selectedPersonId: person.id })}\n        >\n          <td>{person.id}</td>\n\n          <td\n            className={getClassForPersonsName(person)}\n          >\n            {person.name}\n          </td>\n\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td>{person.age}</td>\n          <td>\n            {person.mother === null || person.mother === undefined\n              ? 'unknown'\n              : person.mother\n            }\n          </td>\n          <td>\n            {person.father === null || person.father === undefined\n              ? 'unknown'\n              : person.father\n            }\n          </td>\n          <td>\n            {person.children.length > 0\n              ? person.children.join(', ')\n              : 'unknown'\n            }\n          </td>\n        </tr>\n      )));\n  }\n}\n\nPersonInfo.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.array,\n  }).isRequired,\n};\n\nexport default PersonInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PersonInfo from './PersonInfo';\n\nconst PeopleTable = ({ people }) => (\n  <table className=\"people-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Age</th>\n        <th>Mother</th>\n        <th>Father</th>\n        <th>Children</th>\n      </tr>\n    </thead>\n    <tbody>\n      <PersonInfo people={people} />\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","let sortedPeople = [];\nlet currentKey = '';\n\nconst createSorterBy = ({ sortField, people }) => {\n  if (currentKey === sortField) {\n    return sortedPeople.reverse();\n  }\n\n  currentKey = sortField;\n\n  sortedPeople = [...people].sort((a, b) => {\n    switch (typeof a[sortField]) {\n      case 'string':\n        return a[sortField].localeCompare(b[sortField]);\n\n      case 'number':\n      case 'boolean':\n        return a[sortField] - b[sortField];\n\n      default:\n        return 0;\n    }\n  });\n\n  return sortedPeople;\n};\n\nexport default createSorterBy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const form = event.target;\n\n    this.props.onSubmit({\n      id: this.props.peopleAmmount + 1,\n      name: form.elements.name.value,\n      sex: form.elements.sex.value,\n      born: form.elements.born.value,\n      died: form.elements.died.value,\n      children: form.elements.children.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Person's name\"\n          required\n        />\n\n        <label htmlFor=\"male-sex\">\n          <input\n            id=\"male-sex\"\n            type=\"radio\"\n            name=\"sex\"\n            value=\"m\"\n          />\n          Male\n        </label>\n\n        <label htmlFor=\"female-sex\">\n          <input\n            id=\"female-sex\"\n            type=\"radio\"\n            name=\"sex\"\n            value=\"f\"\n          />\n          Female\n        </label>\n\n        <input\n          type=\"number\"\n          name=\"born\"\n          placeholder=\"Year of birth\"\n          required\n        />\n\n        <input\n          type=\"number\"\n          name=\"died\"\n          placeholder=\"Year of death\"\n        />\n\n        <input\n          type=\"text\"\n          name=\"mother\"\n          placeholder=\"Person mother's name\"\n        />\n\n        <input\n          type=\"text\"\n          name=\"father\"\n          placeholder=\"Person father's name\"\n        />\n\n        <input\n          type=\"text\"\n          name=\"children\"\n          placeholder=\"Person children's names\"\n        />\n\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  peopleAmmount: PropTypes.number.isRequired,\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PeopleTable from './components/PeopleTable';\nimport createSorterBy from './components/createSorterBy';\nimport NewPerson from './components/NewPerson';\n\nconst getAge = (person) => {\n  if (person.died === '') {\n    return 2019 - person.born;\n  }\n\n  return person.died - person.born;\n};\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    sortField: 'id',\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const people = await getData();\n\n    this.setState({\n      people,\n      visiblePeople: people,\n    });\n  };\n\n  sortBy = (sortField) => {\n    this.setState({\n      sortField,\n    });\n    this.setState(prevState => ({\n      visiblePeople: createSorterBy(prevState),\n    }));\n  };\n\n  handleFilter = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        (person) => {\n          if (person[name] !== null) {\n            return person[name]\n              .toLowerCase()\n              .includes(value\n                .toLowerCase()\n                .trim());\n          }\n\n          return 0;\n        }\n      ),\n    }));\n  }\n\n  addNewPerson = (person) => {\n    console.log(person);\n    this.setState((prevState) => {\n      person.age = getAge(person);\n\n      const people = [...prevState.people, person];\n\n      return {\n        people,\n        visiblePeople: people,\n      };\n    });\n  }\n\n  render() {\n    const { visiblePeople } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>People table</h1>\n\n        <div className=\"sort-buttons\">\n          <h2>\n            Sort by:\n          </h2>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('id')}\n            className=\"sort-buttons__btn\"\n          >\n            ID\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('name')}\n            className=\"sort-buttons__btn\"\n          >\n            Name\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('age')}\n            className=\"sort-buttons__btn\"\n          >\n            Age\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('born')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of birth\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('died')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of death\n          </button>\n        </div>\n\n        <div className=\"filter-inputs\">\n          <label htmlFor=\"name-input\">\n            Filter by name:\n            <input\n              type=\"text\"\n              id=\"name-input\"\n              name=\"name\"\n              onChange={this.handleFilter}\n            />\n          </label>\n          <label htmlFor=\"mother-input\">\n            Filter by mother:\n            <input\n              type=\"text\"\n              id=\"mother-input\"\n              name=\"mother\"\n              onChange={this.handleFilter}\n            />\n          </label>\n          <label htmlFor=\"father-input\">\n            Filter by father:\n            <input\n              type=\"text\"\n              id=\"father-input\"\n              name=\"father\"\n              onChange={this.handleFilter}\n            />\n          </label>\n        </div>\n\n        <NewPerson\n          peopleAmmount={visiblePeople.length}\n          onSubmit={this.addNewPerson}\n        />\n\n        <PeopleTable people={visiblePeople} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}