{"version":3,"sources":["api/getData.js","components/getClassForPersonsName.js","components/getClassForPersonsInfo.js","components/PersonInfo.js","components/PeopleTable.js","components/createSorterBy.js","App.js","index.js"],"names":["getPeople","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getData","_ref2","_callee2","people","_context2","sent","map","person","index","objectSpread","id","age","died","born","century","Math","ceil","children","filter","child","father","name","mother","p","getClassForPersonsName","result","getClassForPersonsInfo","concat","sex","length","PersonInfo","react_default","createElement","className","join","PeopleTable","components_PersonInfo","key","sortedPeople","currentKey","createSorterBy","sortField","reverse","toConsumableArray","sort","b","localeCompare","App","state","visiblePeople","loadData","_this","setState","sortBy","prevState","filterByName","event","value","target","toLowerCase","includes","filterByMother","filterByFather","_this2","type","onClick","htmlFor","onChange","components_PeopleTable","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.3ca60ba2.chunk.js","sourcesContent":["const url = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getPeople = async() => fetch(url)\n  .then(response => response.json());\n\nconst getData = async() => {\n  const people = await getPeople();\n\n  return people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter(child => child.father === person.name\n        || child.mother === person.name)\n      .map(p => p.name),\n  }));\n};\n\nexport default getData;\n","const getClassForPersonsName = (person) => {\n  let result = '';\n\n  if (person.born < 1650) {\n    result += `person__born-before-1650`;\n  }\n\n  if (person.died > 1800) {\n    result += `person__died-after-1800`;\n  }\n\n  return result;\n};\n\nexport default getClassForPersonsName;\n","const getClassForPersonsInfo = (person) => {\n  let result = `person person__lived-in-${person.century}`;\n\n  if (person.sex === 'f') {\n    result += ` person__female`;\n  }\n\n  if (person.sex === 'm') {\n    result += ` person__male`;\n  }\n\n  if (person.age > 65) {\n    result += ` person__lived-at-least-65`;\n  }\n\n  if (person.sex === 'm' && person.children.length > 0) {\n    result += ` person__father`;\n  }\n\n  if (person.sex === 'f' && person.children.length > 0) {\n    result += ` person__mother`;\n  }\n\n  return result;\n};\n\nexport default getClassForPersonsInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport getClassForPersonsName from './getClassForPersonsName';\nimport getClassForPersonsInfo from './getClassForPersonsInfo';\n\nconst PersonInfo = ({ person }) => (\n  <tr\n    className={getClassForPersonsInfo(person)}\n  >\n    <td>{person.id}</td>\n\n    <td\n      className={getClassForPersonsName(person)}\n    >\n      {person.name}\n    </td>\n\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.age}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n    <td>{person.children.join(', ')}</td>\n  </tr>\n);\n\nPersonInfo.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.array,\n  }).isRequired,\n};\n\nexport default PersonInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PersonInfo from './PersonInfo';\n\nconst PeopleTable = ({ people }) => (\n  <table className=\"people-table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Age</th>\n        <th>Mother</th>\n        <th>Father</th>\n        <th>Children</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonInfo person={person} key={people.id} />\n      ))}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","let sortedPeople = [];\nlet currentKey = '';\n\nconst createSorterBy = ({ sortField, people }) => {\n  if (currentKey === sortField) {\n    return sortedPeople.reverse();\n  }\n\n  currentKey = sortField;\n\n  sortedPeople = [...people].sort((a, b) => {\n    switch (typeof a[sortField]) {\n      case 'string':\n        return a[sortField].localeCompare(b[sortField]);\n\n      case 'number':\n      case 'boolean':\n        return a[sortField] - b[sortField];\n\n      default:\n        return 0;\n    }\n  });\n\n  return sortedPeople;\n};\n\nexport default createSorterBy;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PeopleTable from './components/PeopleTable';\nimport createSorterBy from './components/createSorterBy';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    sortField: 'id',\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const people = await getData();\n\n    this.setState({\n      people,\n      visiblePeople: people,\n    });\n  };\n\n  sortBy = (sortField) => {\n    this.setState({\n      sortField,\n    });\n    this.setState(prevState => ({\n      visiblePeople: createSorterBy(prevState),\n    }));\n  };\n\n  filterByName = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        person => person.name.toLowerCase().includes(value.toLowerCase())\n      ),\n    }));\n  };\n\n  filterByMother = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        (person) => {\n          if (person.mother !== null) {\n            return person.mother.toLowerCase().includes(value.toLowerCase());\n          }\n\n          return 0;\n        }\n      ),\n    }));\n  }\n\n  filterByFather = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      visiblePeople: prevState.people.filter(\n        (person) => {\n          if (person.father !== null) {\n            return person.father.toLowerCase().includes(value.toLowerCase());\n          }\n\n          return 0;\n        }\n      ),\n    }));\n  }\n\n  render() {\n    const { visiblePeople } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>People table</h1>\n\n        <div className=\"sort-buttons\">\n          <h2>\n            Sort by:\n          </h2>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('id')}\n            className=\"sort-buttons__btn\"\n          >\n            ID\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('name')}\n            className=\"sort-buttons__btn\"\n          >\n            Name\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('age')}\n            className=\"sort-buttons__btn\"\n          >\n            Age\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('born')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of birth\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortBy('died')}\n            className=\"sort-buttons__btn\"\n          >\n            Year of death\n          </button>\n        </div>\n\n        <div className=\"filter-inputs\">\n          <label htmlFor=\"name-input\">\n            Filter by name:\n            <input\n              type=\"text\"\n              id=\"name-input\"\n              onChange={this.filterByName}\n            />\n          </label>\n          <label htmlFor=\"mother-input\">\n            Filter by mother:\n            <input\n              type=\"text\"\n              id=\"mother-input\"\n              onChange={this.filterByMother}\n            />\n          </label>\n          <label htmlFor=\"father-input\">\n            Filter by father:\n            <input\n              type=\"text\"\n              id=\"father-input\"\n              onChange={this.filterByFather}\n            />\n          </label>\n        </div>\n\n        <PeopleTable people={visiblePeople} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}